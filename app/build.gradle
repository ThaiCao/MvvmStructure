plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

/**
 * Set this to true to create two separate APKs instead of one:
 *   - An APK that only works on ARM devices
 *   - An APK that only works on x86 devices
 * The advantage is the size of the APK is reduced by about 4MB.
 * Upload all the APKs to the Play Store and people will download
 * the correct one based on the CPU architecture of their device.
 */
def enableSeparateBuildPerCPUArchitecture = false

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = false


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.me.structure"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            buildConfigField "String", "MOVIE_API_KEY", "\"e54d1df6bcc26b67ccadf98cea21c3f3\""
            buildConfigField "String", "MOVIE_BASE_URL", "\"https://api.themoviedb.org/3/\""
            buildConfigField "String", "IMAGE_API_KEY", "\"https://image.tmdb.org/t/p/\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "MOVIE_API_KEY", "\"e54d1df6bcc26b67ccadf98cea21c3f3\""
            buildConfigField "String", "MOVIE_BASE_URL", "\"https://api.themoviedb.org/3/\""
            buildConfigField "String", "IMAGE_API_KEY", "\"https://image.tmdb.org/t/p/\""
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName = "MeApp - " + "${variant.name}-${variant.versionName}.apk"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled true
    }
    lintOptions {
        checkReleaseBuilds false
    }

    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            applicationId 'com.me.structure.dev'
        }
        qa {
            applicationId 'com.me.structure.qa'
        }
        staging {
            applicationId 'com.me.structure.stg'
        }
        production {
            versionCode 1
            versionName "1.0.0"
            applicationId 'com.me.structure'
        }
    }

}

kapt {
    correctErrorTypes = true
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    // For Identity Credential
    implementation "androidx.security:security-crypto:1.0.0"
//    // For Identity Credential APIs
//    implementation "androidx.security:security-identity-credential:1.0.0-alpha02"
//    // For App Authentication APIs
//    implementation "androidx.security:security-app-authenticator:1.0.0-alpha02"
//    // For App Authentication API testing
//    androidTestImplementation "androidx.security:security-app-authenticator:1.0.0-alpha01"

    // Koin core features
    implementation "io.insert-koin:koin-core:$koin_version"
    // Koin test features
    testImplementation "io.insert-koin:koin-test:$koin_version"
    // Koin main features for Android (Scope,ViewModel ...)
    implementation "io.insert-koin:koin-android:$koin_version"
    // Koin Java Compatibility
    implementation "io.insert-koin:koin-android-compat:$koin_version"
    // Koin for Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    // Koin for Jetpack Compose
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
    // Koin for JUnit 4
    testImplementation "io.insert-koin:koin-test-junit4:$koin_version"

    // Network
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    //rx
    implementation("io.reactivex.rxjava3:rxkotlin:3.0.1")
    implementation 'com.jakewharton.rxbinding4:rxbinding:4.0.0'
    implementation 'com.jakewharton.rxbinding4:rxbinding-appcompat:4.0.0'

    // glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'

    implementation "androidx.room:room-runtime:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.3.0rxpermissions"

    //permission
    implementation 'com.github.tbruyelle:rxpermissions:0.12'

    //epoxy - used for recyclerview
    implementation "com.airbnb.android:epoxy:4.5.0"
    implementation 'com.airbnb.android:epoxy-databinding:4.5.0'
    implementation "com.airbnb.android:epoxy-annotations:4.5.0"
    kapt "com.airbnb.android:epoxy-processor:4.5.0"

    //lottie
    implementation 'com.airbnb.android:lottie:3.7.0'

    //https://github.com/stripe/stripe-android -- for Payment
    //    implementation 'com.stripe:stripe-android:17.0.0'

    // https://github.com/vardemin/MaterialCountryPicker -- for picker
    //    implementation 'com.github.vardemin.MaterialCountryPicker:materialcountrypicker:0.2.3'

    // google services
    implementation 'com.google.android.gms:play-services-base:17.6.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
//    // Import the BoM for the Firebase platform (see: https://firebase.google.com/docs/android/learn-more#bom)
//    implementation platform('com.google.firebase:firebase-bom:28.2.1')
//
//    //Firebase Analytics
//    implementation 'com.google.firebase:firebase-analytics-ktx'
//
//    // Firebase Authentication (Java)
//    implementation 'com.google.firebase:firebase-auth'
//
//    // Firebase Authentication (Kotlin)
//    implementation 'com.google.firebase:firebase-auth-ktx'
//
//    // Google Sign In SDK (only required for Google Sign In)
//    implementation 'com.google.android.gms:play-services-auth:19.0.0'

    
}